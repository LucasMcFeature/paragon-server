package sandbox.wlove;

public class JkPdfTest
{
    // none
}

/*
import com.itextpdf.text.*;
import com.itextpdf.text.List;
import com.itextpdf.text.Font.*;
import com.itextpdf.text.pdf.*;

public class JkPdfTest
{
    //##################################################
    //# constants
    //##################################################

    private static String FILE      = "c:/temp/test.pdf";

    //##################################################
    //# fonts
    //##################################################

    private static Font   catFont   = new Font(FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static Font   redFont   = new Font(
                                        FontFamily.TIMES_ROMAN,
                                        12,
                                        Font.NORMAL,
                                        BaseColor.RED);
    private static Font   subFont   = new Font(FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font   smallBold = new Font(FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    //##################################################
    //# main
    //##################################################

    public static void main(String[] args)
    {
        try
        {
            System.out.println("Running...");

            Document doc;
            doc = new Document();

            PdfWriter.getInstance(doc, new FileOutputStream(FILE));

            doc.open();
            addMetaData(doc);
            addTitlePage(doc);
            addContent(doc);
            doc.close();

            System.out.println("ok.");
        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document doc)
    {
        doc.addTitle("My first PDF");
        doc.addSubject("Using iText");
        doc.addKeywords("Java, PDF, iText");
        doc.addAuthor("Lars Vogel");
        doc.addCreator("Lars Vogel");
    }

    private static void addTitlePage(Document doc) throws DocumentException
    {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);
        preface.add(new Paragraph("Title of the document", catFont));

        addEmptyLine(preface, 1);

        String s = "Report generated by: " + System.getProperty("user.name") + ", " + new Date();
        preface.add(new Paragraph(s, smallBold));

        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
            "This document describes something which is very important ",
            smallBold));

        addEmptyLine(preface, 8);

        preface.add(new Paragraph(
            "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.de ;-).",
            redFont));

        doc.add(preface);
        // Start a new page
        doc.newPage();
    }

    private static void addContent(Document document) throws DocumentException
    {
        Anchor anchor = new Anchor("First Chapter", catFont);
        anchor.setName("First Chapter");

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Hello"));

        subPara = new Paragraph("Subcategory 2", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Paragraph 1"));
        subCatPart.add(new Paragraph("Paragraph 2"));
        subCatPart.add(new Paragraph("Paragraph 3"));

        // Add a  little list
        createList(subCatPart);

        // Add a small table
        createTable(subCatPart);
        // Now a small table

        // Now add all this to the document
        document.add(catPart);

        // Next section
        anchor = new Anchor("Second Chapter", catFont);
        anchor.setName("Second Chapter");

        // Second parameter is the number of the chapter
        catPart = new Chapter(new Paragraph(anchor), 1);

        subPara = new Paragraph("Subcategory", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("This is a very important message"));

        // Now add all this to the document
        document.add(catPart);

    }

    private static void createTable(Section section)
    {
        PdfPTable table;
        table = new PdfPTable(4);

        int n = 20;
        for ( int i = 0; i < n; i++ )
            table.addCell("" + i);

        section.add(table);
    }

    private static void createList(Section subCatPart)
    {
        List list;
        list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number)
    {
        for ( int i = 0; i < number; i++ )
            paragraph.add(new Paragraph(" "));
    }
    
}
*/
